name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  lint-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './backend/package-lock.json'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Lint
        run: npm run lint
  
  lint-admin-panel:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./admin-panel
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './admin-panel/package-lock.json'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Lint
        run: npm run lint
  
  test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './backend/package-lock.json'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test

  test-admin-panel:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./admin-panel
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './admin-panel/package-lock.json'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test
  
  build:
    runs-on: ubuntu-latest
    needs: [lint-backend, lint-admin-panel, test-backend, test-admin-panel]
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: false
          load: true
          tags: vpnservice-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build admin panel image
        uses: docker/build-push-action@v4
        with:
          context: ./admin-panel
          push: false
          load: true
          tags: vpnservice-admin:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max 