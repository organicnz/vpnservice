name: Deploy to Azure VM

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
          if_key_exists: fail

      - name: Deploy to Azure VM
        env:
          SSH_USER: organic
          SERVER_IP: vpn-service.germanywestcentral.cloudapp.azure.com
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ssh $SSH_USER@$SERVER_IP << 'ENDSSH'
            # Install Docker if not present
            if ! command -v docker &> /dev/null; then
              echo "Installing Docker..."
              sudo apt-get update
              sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
              curl -fsSL https://get.docker.com -o get-docker.sh
              sudo sh get-docker.sh
              sudo usermod -aG docker $USER
            fi

            # Install Docker Compose if not present
            if ! command -v docker-compose &> /dev/null; then
              echo "Installing Docker Compose..."
              sudo apt-get update
              sudo apt-get install -y docker-compose-plugin
            fi

            # Navigate to project directory (create if it doesn't exist)
            mkdir -p ~/dev
            cd ~/dev
            
            if [ ! -d "vpnservice" ]; then
              echo "Cloning repository..."
              git clone https://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@github.com/organicnz/vpnservice.git
              cd vpnservice
            else
              cd vpnservice
              echo "Pulling latest changes..."
              git pull https://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@github.com/organicnz/vpnservice.git
            fi

            # Copy .env file if it doesn't exist
            if [ ! -f ".env" ]; then
              cp .env.example .env
              # Here you would edit .env with the correct values
              # For security, we've stored them as GitHub secrets
              echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> .env
              echo "SUPABASE_KEY=${{ secrets.SUPABASE_KEY }}" >> .env
              echo "SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" >> .env
              echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" >> .env
            fi

            # Start or restart Docker services
            # First check if docker-compose or docker compose is available
            if command -v docker-compose &> /dev/null; then
              docker-compose down
              docker-compose up -d
            else
              docker compose down
              docker compose up -d
            fi

            # Verify services are running
            docker ps
          ENDSSH 