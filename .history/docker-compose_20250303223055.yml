version: '3.8'

services:
  # 3x-ui VPN Panel
  xui:
    image: ghcr.io/mhsanaei/3x-ui:latest
    container_name: xray-ui
    restart: unless-stopped
    ports:
      - "54321:54321" # Panel port
      - "443:443"     # HTTPS port (for Xray services)
      - "80:80"       # HTTP port (for certbot)
    environment:
      - TZ=Europe/Moscow
      - XRAY_VMESS_AEAD_FORCED=false
    volumes:
      - ./data/xray/db/:/etc/x-ui/
      - ./data/xray/cert/:/root/cert/
    networks:
      - vpn-network

  # MongoDB for user data and subscriptions
  mongo:
    image: mongo:6.0
    container_name: vpn-mongo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - ./data/mongo:/data/db
    networks:
      - vpn-network

  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: vpn-backend
    restart: unless-stopped
    depends_on:
      - mongo
      - xui
    environment:
      - MONGO_URI=mongodb://admin:password@mongo:27017/vpn?authSource=admin
      - XUI_PANEL_URL=http://xui:54321
      - XUI_USERNAME=admin
      - XUI_PASSWORD=admin
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - NODE_ENV=production
      - PORT=3000
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    networks:
      - vpn-network

  # Admin Panel
  admin:
    build:
      context: ./admin-panel
      dockerfile: Dockerfile
    container_name: vpn-admin
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      - BACKEND_URL=http://backend:3000
      - PORT=8080
    ports:
      - "8080:8080"
    volumes:
      - ./admin-panel:/app
      - /app/node_modules
    networks:
      - vpn-network

networks:
  vpn-network:
    driver: bridge 